[tool:pytest]
minversion = 6.0
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-report=json
    --cov-fail-under=95
    --timeout=300
    --html=pytest_report.html
    --self-contained-html
    --json-report
    --json-report-file=pytest_report.json
    --tb=short
    --maxfail=10
    --durations=10
    -v

testpaths = tests

python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test discovery patterns
collect_ignore = 
    setup.py
    conftest.py

# Timeout settings - 5 minutes for individual tests
timeout = 300
timeout_method = thread

# Markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests  
    gui: marks tests as GUI tests (may require display)
    api: marks tests as API tests (may require network)
    database: marks tests as database tests (may require database setup)
    network: marks tests that require network access
    external: marks tests that use external services (Twilio, TextBelt, etc.)
    smoke: marks tests as smoke tests for basic functionality
    regression: marks tests as regression tests
    performance: marks tests as performance benchmarks
    security: marks tests for security validation
    mock: marks tests that use extensive mocking
    real_service: marks tests that hit real external services
    
# Warning filters
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    ignore:.*PytestCollectionWarning.*
    ignore:.*PytestConfigWarning.*
    ignore::pytest.PytestUnraisableExceptionWarning

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)d)
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Asyncio settings
asyncio_mode = auto

# Parallel execution settings (when using pytest-xdist)
# Uncomment the line below to run tests in parallel
# addopts = --numprocesses=auto

# Console output options
console_output_style = progress
verbosity_assertions = 2

# Cache settings
cache_dir = .pytest_cache

# JUnit XML output for CI/CD integration  
junit_suite_name = SMSMaster Test Suite
junit_logging = all
junit_log_passing_tests = true
junit_duration_report = total
